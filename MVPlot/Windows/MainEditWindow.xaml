<Window x:Class="MVPlot.Windows.MainEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:windows="clr-namespace:MVPlot.Windows"
        xmlns:managers="clr-namespace:MVPlot.Managers"
        xmlns:behaviors="clr-namespace:MVPlot.Behaviors"
        xmlns:utils="clr-namespace:MVPlot.Utilities"
        xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:system="clr-namespace:System;assembly=netstandard"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Icon="/Resources/MVPlot.ico"
        Height="450" Width="800"
        d:DataContext="{d:DesignInstance windows:MainEditWindowViewModel}">
    <i:Interaction.Behaviors>
        <behaviors:MainEditWindowBehavior/>
        <behaviors:WindowBehavior/>
    </i:Interaction.Behaviors>
    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveCommand}"/>
        <KeyBinding Key="N" Modifiers="Ctrl+Shift" Command="{Binding NewCommand}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenCommand}"/>
        <KeyBinding Key="Q" Modifiers="Ctrl" Command="{Binding CloseCommand}"/>
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding UndoCommand}"/>
        <KeyBinding Key="Y" Modifiers="Ctrl" Command="{Binding RedoCommand}"/>
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutCommand}"/>
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CopyCommand}"/>
        <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding PasteCommand}"/>
        <!--
        <KeyBinding Key="A" Modifiers="Ctrl" Command="{Binding SelectAllCommand}"/>
        -->
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{Binding FindCommand}"/>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding NewPlotCommand}"/>
        <KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding DeletePlotCommand}"/>
        <!--
        <KeyBinding Key="E" Modifiers="Ctrl" Command="{Binding ExportMVEditCommand}"/>
        -->
        <KeyBinding Key="I" Modifiers="Ctrl" Command="{Binding AboutCommand}"/>
        <KeyBinding Key="U" Modifiers="Ctrl" Command="{Binding UsageCommand}"/>
        <KeyBinding Key="E" Modifiers="Ctrl+Shift" Command="{Binding InsertPlotConditionCommand}"/>
        <KeyBinding Key="R" Modifiers="Ctrl+Shift" Command="{Binding DeletePlotConditionCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <utils:XConverter x:Key="XConverter"/>
        <utils:Bytes2StringConverter x:Key="Bytes2String"/>
        <utils:PlotRow2String x:Key="PlotRow2String"/>
    </Window.Resources>
    <Window.DataContext>
        <windows:MainEditWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="26"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="4"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="4"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="4"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding [MainEditWIndow_Conditions],Source={x:Static managers:LanguageManager.Instance}}" Width="160" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="20" TextAlignment="Center"/>
                <ListBox SelectedIndex="{Binding PlotConditionSelectedIndex}" ItemsSource="{Binding PlotConditionList}" Margin="160,0,0,0" ScrollViewer.CanContentScroll="False"/>
                <Border Grid.Row="1" Background="{StaticResource Color_Separator}"/>
                <ListView x:Name="PlotRowListView" Grid.Row="2" ItemsSource="{Binding PlotRowList}" SelectedItem="{Binding PlotRowListSelectedItem}" SelectedIndex="{Binding PlotRowListSelectedIndex}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="-61,0,0,0" VirtualizingPanel.IsVirtualizing="True">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Margin="5,4,4,4">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource PlotRow2String}">
                                        <Binding Path="Type"/>
                                        <Binding Path="Content"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Style>
                        <Style TargetType="{x:Type ListView}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                        <Border x:Name="Bd" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                            <hc:ScrollViewer Focusable="false" HorizontalScrollBarVisibility="Disabled">
                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Stretch"/>
                                            </hc:ScrollViewer>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="true"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Style>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid x:Name="Grid">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="60"/>
                                                <ColumnDefinition Width="0"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Border Grid.Column="2" x:Name="Border" SnapsToDevicePixels="true" Background="#01000000" DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" d:DataContext="{d:DesignInstance windows:MainEditWindowViewModel}">
                                                <Border.ContextMenu>
                                                    <ContextMenu Background="{DynamicResource Color_Background}">
                                                        <MenuItem Header="{Binding [MainEditWindow_PlotRowList_Delete], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding DeletePlotRowCommand}"/>
                                                        <MenuItem Header="{Binding [MainEditWindow_PlotRowList_Overwrite], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding OverwritePlotRowCommand}"/>
                                                        <Separator Background="{DynamicResource Color_Divider}"/>
                                                        <MenuItem IsEnabled="False" Header="{Binding [MainEditWindow_PlotRowList_Move], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Background="{DynamicResource Color_Background}">
                                                            <MenuItem Header="{Binding [MainEditWindow_PlotRowList_MoveForward], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding MoveForwardPlotRowCommand}"/>
                                                            <MenuItem Header="{Binding [MainEditWindow_PlotRowList_MoveBackward], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding MoveBackwardPlotRowCommand}"/>
                                                            <MenuItem Header="{Binding [MainEditWindow_PlotRowList_MoveForwardTo], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding MoveForwardToPlotRowCommand}"/>
                                                            <MenuItem Header="{Binding [MainEditWindow_PlotRowList_MoveBackwardTo], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding MoveBackwardToPlotRowCommand}"/>
                                                        </MenuItem>
                                                        <Separator Background="{DynamicResource Color_Divider}"/>
                                                        <MenuItem IsEnabled="False" Header="{Binding [MainEditWindow_PlotRowList_Cut], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding CutPlotRowCommand}"/>
                                                        <MenuItem IsEnabled="False" Header="{Binding [MainEditWindow_PlotRowList_Copy], Source={x:Static managers:LanguageManager.Instance}}" Background="{DynamicResource Color_Background}" Foreground="{DynamicResource Color_UI}">
                                                            <MenuItem Header="{Binding [MainEditWindow_PlotRowList_CopyContent], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding CopyContentPlotRowCommand}"/>
                                                            <MenuItem Header="{Binding [MainEditWindow_PlotRowList_CopyRow], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding CopyPlotRowCommand}"/>
                                                          </MenuItem>
                                                        <MenuItem IsEnabled="False" Header="{Binding [MainEditWindow_PlotRowList_Paste], Source={x:Static managers:LanguageManager.Instance}}" Background="{DynamicResource Color_Background}" Foreground="{DynamicResource Color_UI}">
                                                            <MenuItem Header="{Binding [MainEditWindow_PlotRowList_OverwritePaste], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding OverwritePastePlotRowCommand}"/>
                                                            <MenuItem Header="{Binding [MainEditWindow_PlotRowList_InsertPaste], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding InsertPastePlotRowCommand}"/>
                                                            <MenuItem Header="{Binding [MainEditWindow_PlotRowList_AppendPaste], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding AppendPastePlotRowCommand}"/>
                                                        </MenuItem>
                                                        <!--
                                                        <Separator Background="{DynamicResource Color_Divider}"/>
                                                        <MenuItem Header="{Binding [MainEditWindow_PlotRowList_Multiselect], Source={x:Static managers:LanguageManager.Instance}}" Foreground="{DynamicResource Color_UI}" Command="{Binding MultiSelectPlotRowCommand}"/>
                                                        -->
                                                    </ContextMenu>
                                                </Border.ContextMenu>
                                                <ContentPresenter/>
                                            </Border>
                                            <Viewbox Grid.Column="0">
                                                <CheckBox BorderBrush="{DynamicResource Color_Border}" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}, Mode=FindAncestor}}"/>
                                            </Viewbox>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#40E0E0E0"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#80E0E0E0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>
                <Border Grid.Row="3" Background="{DynamicResource Color_Separator}"/>
                <hc:ScrollViewer Grid.Row="4">
                    <StackPanel>
                        <TextBlock Text="{Binding [MainEditWindow_MainSender_NormalPlotRowTitle],Source={x:Static managers:LanguageManager.Instance}}" FontSize="20" Margin="8,4"/>
                        <TextBlock Text="{Binding [MainEditWindow_MainSender_NormalPlotRowNameTitle],Source={x:Static managers:LanguageManager.Instance}}" FontSize="15" Margin="8,4"/>
                        <hc:TextBox Text="{Binding MainSender_NormalPlotRowName}" Margin="8,4" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                        <TextBlock Text="{Binding [MainEditWindow_MainSender_NormalPlotRowContentTitle],Source={x:Static managers:LanguageManager.Instance}}" FontSize="15" Margin="8,4"/>
                        <hc:TextBox Text="{Binding MainSender_NormalPlotRowContent, UpdateSourceTrigger=PropertyChanged}" Height="84" Margin="8,4" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top" Padding="4"/>
                        <Button Margin="8,4" HorizontalAlignment="Right" Content="{Binding [MainEditWindow_MainSenderSend],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding AddNormalPlotRowCommand}"/>
                        <Separator/>
                        <TextBlock Text="{Binding [MainEditWindow_MainSender_AdditionalPlotRowTitle],Source={x:Static managers:LanguageManager.Instance}}" FontSize="20" Margin="8,4"/>
                        <Grid Margin="8,4">
                            <TextBlock Text="{Binding [MainEditWindow_MainSender_AdditionalPlotRowTypeTitle],Source={x:Static managers:LanguageManager.Instance}}" FontSize="15" VerticalAlignment="Center"/>
                            <hc:ComboBox SelectedIndex="{Binding MainSender_AdditionalPlotRowType_SelectedIndex}" HorizontalAlignment="Right" Width="160">
                                <ComboBoxItem Content="{Binding [MainEditWindow_MainSender_AdditionalPlotRowType1],Source={x:Static managers:LanguageManager.Instance}}"/>
                                <ComboBoxItem Content="{Binding [MainEditWindow_MainSender_AdditionalPlotRowType2],Source={x:Static managers:LanguageManager.Instance}}"/>
                            </hc:ComboBox>
                        </Grid>
                        <TextBlock Text="{Binding [MainEditWindow_MainSender_AdditionalPlotRowContentTitle],Source={x:Static managers:LanguageManager.Instance}}" FontSize="15" Margin="8,4"/>
                        <hc:TextBox Text="{Binding MainSender_AdditionalPlotRowContent, UpdateSourceTrigger=PropertyChanged}" Margin="8,4" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                        <Button Command="{Binding AddAdditionalPlotRowCommand}" Margin="8,4" HorizontalAlignment="Right" Content="{Binding [MainEditWindow_MainSenderSend],Source={x:Static managers:LanguageManager.Instance}}"/>
                        <Separator/>
                        <TextBlock Text="{Binding [MainEditWindow_MainSender_ActionPlotRowTitle],Source={x:Static managers:LanguageManager.Instance}}" FontSize="20" Margin="8,4"/>
                        <Grid Margin="8,4">
                            <TextBlock Text="{Binding [MainEditWindow_MainSender_ActionPlotRowTypeTitle], Source={x:Static managers:LanguageManager.Instance}}" FontSize="15" VerticalAlignment="Center"/>
                            <hc:ComboBox SelectedIndex="{Binding MainSender_ActionPlotRowType_SelectedIndex}" HorizontalAlignment="Right" Width="160">
                                <ComboBoxItem Content="{Binding [MainEditWindow_MainSender_ActionPlotRowType1],Source={x:Static managers:LanguageManager.Instance}}"/>
                                <ComboBoxItem Content="{Binding [MainEditWindow_MainSender_ActionPlotRowType2],Source={x:Static managers:LanguageManager.Instance}}"/>
                            </hc:ComboBox>
                        </Grid>
                        <TextBlock Text="{Binding [MainEditWindow_MainSender_ActionPlotRowContentTitle],Source={x:Static managers:LanguageManager.Instance}}" FontSize="15" Margin="8,4"/>
                        <hc:TextBox Text="{Binding MainSender_ActionPlotRowContent, UpdateSourceTrigger=PropertyChanged}" Margin="8,4" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                        <Button Command="{Binding AddActionPlotRowCommand}" Margin="8,4" HorizontalAlignment="Right" Content="{Binding [MainEditWindow_MainSenderSend],Source={x:Static managers:LanguageManager.Instance}}"/>
                        <Control Height="16"/>
                    </StackPanel>
                </hc:ScrollViewer>
            </Grid>
            <ListBox ItemsSource="{Binding PlotList}" SelectedIndex="{Binding PlotListSelectedIndex}" hc:BorderElement.CornerRadius="0" Padding="0" BorderThickness="0" hc:ScrollViewer.IsInertiaEnabled="True" hc:ScrollViewer.IsPenetrating="True" ScrollViewer.CanContentScroll="False">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding PlotName, Converter={StaticResource Bytes2String}}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Grid.Column="0" Foreground="Black" FontSize="16" Margin="10" HorizontalAlignment="Left"/>
                            <TextBlock Text="{Binding ID, StringFormat=ID:{0}}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Grid.Column="1" Foreground="Black" FontSize="16" Margin="10" HorizontalAlignment="Right"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid x:Name="Grid" SnapsToDevicePixels="true" Background="White">
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Style.Triggers>
                                                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.TargetProperty="Opacity"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <Grid.Tag>
                                            <system:Boolean>False</system:Boolean>
                                        </Grid.Tag>
                                        <ContentPresenter VerticalAlignment="Center"/>
                                        <Border x:Name="Border" Background="{StaticResource PrimaryBrush}" Width="{Binding ActualWidth, ElementName=Grid}" ClipToBounds="True">
                                            <Border.Tag>
                                                <system:Double>1</system:Double>
                                            </Border.Tag>
                                            <Border.RenderTransform>
                                                <TranslateTransform>
                                                    <TranslateTransform.X>
                                                        <MultiBinding Converter="{StaticResource XConverter}">
                                                            <Binding ElementName="Border" Path="Tag"/>
                                                            <Binding ElementName="Grid" Path="ActualWidth"/>
                                                            <Binding ElementName="Grid" Path="Tag"/>
                                                        </MultiBinding>
                                                    </TranslateTransform.X>
                                                </TranslateTransform>
                                            </Border.RenderTransform>
                                            <Grid x:Name="Text">
                                                <Grid.Tag>
                                                    <system:Double>-1</system:Double>
                                                </Grid.Tag>
                                                <Grid.RenderTransform>
                                                    <TranslateTransform>
                                                        <TranslateTransform.X>
                                                            <MultiBinding Converter="{StaticResource XConverter}">
                                                                <Binding ElementName="Text" Path="Tag"/>
                                                                <Binding ElementName="Grid" Path="ActualWidth"/>
                                                                <Binding ElementName="Grid" Path="Tag"/>
                                                            </MultiBinding>
                                                        </TranslateTransform.X>
                                                    </TranslateTransform>
                                                </Grid.RenderTransform>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding PlotName, Converter={StaticResource Bytes2String}}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Grid.Column="0" Foreground="{StaticResource TextIconBrush}" FontSize="16" Margin="10" HorizontalAlignment="Left"/>
                                                <TextBlock Text="{Binding ID, StringFormat=ID:{0}}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Grid.Column="1" Foreground="{StaticResource TextIconBrush}" FontSize="16" Margin="10" HorizontalAlignment="Right"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Tag" TargetName="Grid">
                                                <Setter.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="Border" Storyboard.TargetProperty="Tag">
                                                        <DoubleAnimation.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="Text" Storyboard.TargetProperty="Tag">
                                                        <DoubleAnimation.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetName="Border" Storyboard.TargetProperty="Tag">
                                                        <DoubleAnimation.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseIn"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation To="-1" Duration="0:0:0.3" Storyboard.TargetName="Text" Storyboard.TargetProperty="Tag">
                                                        <DoubleAnimation.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseIn"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="ListBoxItem.Selected">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="1" To="0" Duration="0:0:0.3" Storyboard.TargetName="Border" Storyboard.TargetProperty="Tag">
                                                        <DoubleAnimation.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseIn"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation From="-1" To="0" Duration="0:0:0.3" Storyboard.TargetName="Text" Storyboard.TargetProperty="Tag">
                                                        <DoubleAnimation.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseIn"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="ListBoxItem.Unselected">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.TargetName="Border" Storyboard.TargetProperty="Tag">
                                                        <DoubleAnimation.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseIn"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation From="0" To="-1" Duration="0:0:0.3" Storyboard.TargetName="Text" Storyboard.TargetProperty="Tag">
                                                        <DoubleAnimation.EasingFunction>
                                                            <QuadraticEase EasingMode="EaseIn"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="DockPanel.Dock" Value="Bottom"/>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding [MainEditWindow_NoPlotHint], Source={x:Static managers:LanguageManager.Instance}}" FontSize="15" Visibility="{Binding HasPlot, Converter={StaticResource Boolean2VisibilityReConverter}}"/>
            <Button Width="40" Height="40" HorizontalAlignment="Right" Margin="0,0,20,20" VerticalAlignment="Bottom" hc:BorderElement.CornerRadius="20" hc:IconElement.Geometry="{StaticResource AddGeometry}" Command="{Binding AddPlotCommand}" Cursor="Hand"/>
            <Border Grid.Column="1" CornerRadius="0,0,2,2" Background="{DynamicResource Color_Separator}" Margin="0,0,0,20"/>
            <!--
            -->
            <Border Grid.Column="2" Visibility="{Binding SelectedPlot,Converter={StaticResource Boolean2VisibilityReConverter}}" Background="White">
                <TextBlock Text="{Binding [MainEditWindow_SelectPlotHint], Source={x:Static managers:LanguageManager.Instance}}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            </Border>
        </Grid>
        <Menu Grid.Row="0">
            <Menu.Effect>
                <DropShadowEffect Direction="270" BlurRadius="15" ShadowDepth="0"/>
            </Menu.Effect>
            <MenuItem Header="{Binding [MainEditWindow_MenuFile],Source={x:Static managers:LanguageManager.Instance}}">
                <MenuItem Header="{Binding [MainEditWindow_MenuSave],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding SaveCommand}" InputGestureText="Ctrl+S"/>
                <MenuItem Header="{Binding [MainEditWindow_MenuCreate],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding NewCommand}" InputGestureText="Ctrl+Shift+N"/>
                <MenuItem Header="{Binding [MainEditWindow_MenuOpen],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding OpenCommand}" InputGestureText="Ctrl+O"/>
                <MenuItem Header="{Binding [MainEditWindow_MenuClose],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding CloseCommand}" InputGestureText="Ctrl+Q"/>
            </MenuItem>
            <MenuItem IsEnabled="False" Header="{Binding [MainEditWindow_MenuEdit],Source={x:Static managers:LanguageManager.Instance}}">
                <MenuItem Header="{Binding [MainEditWindow_MenuUndo],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding UndoCommand}" InputGestureText="Ctrl+Z"/>
                <MenuItem Header="{Binding [MainEditWindow_MenuRedo],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding RedoCommand}" InputGestureText="Ctrl+Y"/>
                <Separator/>
                <MenuItem Header="{Binding [MainEditWindow_MenuCut],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding CutCommand}" InputGestureText="Ctrl+X"/>
                <MenuItem Header="{Binding [MainEditWindow_MenuCopy],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding CopyCommand}" InputGestureText="Ctrl+C"/>
                <MenuItem Header="{Binding [MainEditWindow_MenuPaste],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding PasteCommand}" InputGestureText="Ctrl+V"/>
                <!--
                <Separator/>
                <MenuItem Header="{Binding [MainEditWindow_MenuSelectAll],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding SelectAllCommand}" InputGestureText="Ctrl+A"/>
                -->
                <Separator/>
                <MenuItem Header="{Binding [MainEditWindow_MenuFind],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding FindCommand}" InputGestureText="Ctrl+F"/>
            </MenuItem>
            <MenuItem Header="{Binding [MainEditWindow_MenuPlot],Source={x:Static managers:LanguageManager.Instance}}">
                <MenuItem Header="{Binding [MainEditWindow_MenuCreatePlot],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding NewPlotCommand}" InputGestureText="Ctrl+N"/>
                <MenuItem Header="{Binding [MainEditWindow_MenuDeletePlot],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding DeletePlotCommand}" InputGestureText="Ctrl+D"/>
                <MenuItem Header="{Binding [MainEditWindow_MenuInsertCondition],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding InsertPlotConditionCommand}" InputGestureText="Ctrl+Shift+E"/>
                <MenuItem Header="{Binding [MainEditWindow_MenuDeleteCondition],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding DeletePlotConditionCommand}" InputGestureText="Ctrl+Shift+R"/>
            </MenuItem>
            <!--
            <MenuItem Header="{Binding [MainEditWindow_MenuExport],Source={x:Static managers:LanguageManager.Instance}}">
                <MenuItem Header="{Binding [MainEditWindow_MenuExportMVEdit],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding ExportMVEditCommand}" InputGestureText="Ctrl+E"/>
            </MenuItem>
            -->
            <MenuItem Header="{Binding [MainEditWindow_MenuHelp],Source={x:Static managers:LanguageManager.Instance}}">
                <MenuItem Header="{Binding [MainEditWindow_MenuAbout],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding AboutCommand}" InputGestureText="Ctrl+I"/>
                <!--
                <MenuItem Header="{Binding [MainEditWindow_MenuUsage],Source={x:Static managers:LanguageManager.Instance}}" Command="{Binding UsageCommand}" InputGestureText="Ctrl+U"/>
                -->
            </MenuItem>
        </Menu>
    </Grid>
</Window>
